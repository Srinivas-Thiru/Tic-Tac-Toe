{"ast":null,"code":"var _jsxFileName = \"/Users/sri/Portfolio Projects/Tic-Tac-Toe/src/components/Cell.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  id,\n  cell,\n  cells,\n  setCells,\n  turn,\n  setTurn,\n  won\n}) => {\n  const handleClick = e => {\n    if (won) {\n      return;\n    }\n    const taken = cell.value !== \"\" ? false : true;\n    if (!taken) {\n      const newArray = cells.map((cell, index) => {\n        if (index === id && cell === \"\") {\n          if (turn === \"O\") {\n            document.getElementById(index).style.color = \"blue\";\n            setTurn(\"X\");\n          } else {\n            document.getElementById(index).style.color = \"red\";\n            setTurn(\"O\");\n          }\n          return turn;\n        } else {\n          return cell;\n        }\n      });\n      setCells(newArray);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    id: id,\n    onClick: handleClick,\n    children: cell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["Cell","id","cell","cells","setCells","turn","setTurn","won","handleClick","e","taken","value","newArray","map","index","document","getElementById","style","color","_jsxDEV","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sri/Portfolio Projects/Tic-Tac-Toe/src/components/Cell.js"],"sourcesContent":["const Cell = ({id,cell,cells,setCells,turn, setTurn,won}) => {\n\nconst handleClick = (e) => {\n    if(won)\n{\n    return\n}\n    const taken = (cell.value !== \"\" ? false : true);\n\n    if(!taken){\n        const newArray =  cells.map((cell, index)=>{\n            if(index === id && cell === \"\"){\n                    \n                    if(turn === \"O\"){\n                        document.getElementById(index).style.color = \"blue\"\n                        setTurn(\"X\")\n                    }else{\n                        document.getElementById(index).style.color = \"red\"\n                        setTurn(\"O\")\n                    }\n                    return turn;\n                }else{\n                    return cell\n                }\n            })\n            setCells(newArray)\n    }\n}\n\n\n    return (\n        <div className=\"square\" id={id} onClick={ handleClick}>{cell}</div>\n    )\n}\n\nexport default Cell"],"mappings":";;AAAA,MAAMA,IAAI,GAAGA,CAAC;EAACC,EAAE;EAACC,IAAI;EAACC,KAAK;EAACC,QAAQ;EAACC,IAAI;EAAEC,OAAO;EAACC;AAAG,CAAC,KAAK;EAE7D,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,IAAGF,GAAG,EACV;MACI;IACJ;IACI,MAAMG,KAAK,GAAIR,IAAI,CAACS,KAAK,KAAK,EAAE,GAAG,KAAK,GAAG,IAAK;IAEhD,IAAG,CAACD,KAAK,EAAC;MACN,MAAME,QAAQ,GAAIT,KAAK,CAACU,GAAG,CAAC,CAACX,IAAI,EAAEY,KAAK,KAAG;QACvC,IAAGA,KAAK,KAAKb,EAAE,IAAIC,IAAI,KAAK,EAAE,EAAC;UAEvB,IAAGG,IAAI,KAAK,GAAG,EAAC;YACZU,QAAQ,CAACC,cAAc,CAACF,KAAK,CAAC,CAACG,KAAK,CAACC,KAAK,GAAG,MAAM;YACnDZ,OAAO,CAAC,GAAG,CAAC;UAChB,CAAC,MAAI;YACDS,QAAQ,CAACC,cAAc,CAACF,KAAK,CAAC,CAACG,KAAK,CAACC,KAAK,GAAG,KAAK;YAClDZ,OAAO,CAAC,GAAG,CAAC;UAChB;UACA,OAAOD,IAAI;QACf,CAAC,MAAI;UACD,OAAOH,IAAI;QACf;MACJ,CAAC,CAAC;MACFE,QAAQ,CAACQ,QAAQ,CAAC;IAC1B;EACJ,CAAC;EAGG,oBACIO,OAAA;IAAKC,SAAS,EAAC,QAAQ;IAACnB,EAAE,EAAEA,EAAG;IAACoB,OAAO,EAAGb,WAAY;IAAAc,QAAA,EAAEpB;EAAI;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE3E,CAAC;AAAAC,EAAA,GAjCK3B,IAAI;AAmCV,eAAeA,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}